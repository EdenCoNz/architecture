# =============================================================================
# Production Environment Configuration
# =============================================================================
# This file contains configuration for the production environment.
# Copy this file to .env.production and fill in secure values.
#
# Usage:
#   cp .env.production.example .env.production
#   # Edit .env.production with secure production credentials
#   docker compose -f docker-compose.yml -f compose.production.yml --env-file .env.production up -d
#
# Or use the helper script:
#   ./docker-env.sh production start
#
# CRITICAL: NEVER commit .env.production to version control!
# Store production secrets in a secure secrets manager (AWS Secrets Manager, HashiCorp Vault, etc.)
# =============================================================================

# -----------------------------------------------------------------------------
# Environment Identification
# -----------------------------------------------------------------------------
ENVIRONMENT=production
COMPOSE_PROJECT_NAME=app-production

# -----------------------------------------------------------------------------
# Application Versions (Automatically read from source files)
# -----------------------------------------------------------------------------
# These versions are automatically extracted from:
#   - BACKEND_VERSION: backend/config/__init__.py (__version__)
#   - FRONTEND_VERSION: frontend/package.json (version)
# CI/CD pipeline sets these during deployment
BACKEND_VERSION=1.0.0
FRONTEND_VERSION=1.0.0

# -----------------------------------------------------------------------------
# Port Configuration (Production)
# -----------------------------------------------------------------------------
# Only proxy ports exposed in production (NEVER expose service ports directly)
PROXY_PORT=80
PROXY_SSL_PORT=443

# Internal ports (not exposed to host - for container-to-container communication only)
BACKEND_PORT=8000
FRONTEND_PORT=5173
DB_PORT=5432
REDIS_PORT=6379

# -----------------------------------------------------------------------------
# Database Configuration (Production)
# -----------------------------------------------------------------------------
# HIGHLY SECURE credentials for production database
# Generate strong passwords: openssl rand -base64 48
DB_NAME=backend_prod_db
DB_USER=backend_prod_user
DB_PASSWORD=CHANGE_ME_TO_HIGHLY_SECURE_DATABASE_PASSWORD_MIN_32_CHARS
DB_HOST=db
DB_PORT=5432

# PostgreSQL tuning for production
POSTGRES_SHARED_BUFFERS=512MB
POSTGRES_EFFECTIVE_CACHE_SIZE=2GB
POSTGRES_MAX_CONNECTIONS=200
POSTGRES_WORK_MEM=4MB
POSTGRES_MAINTENANCE_WORK_MEM=256MB
POSTGRES_WAL_BUFFERS=16MB

# -----------------------------------------------------------------------------
# Redis Configuration (Production)
# -----------------------------------------------------------------------------
# HIGHLY SECURE password for production Redis
# Generate with: openssl rand -base64 48
REDIS_PASSWORD=CHANGE_ME_TO_HIGHLY_SECURE_REDIS_PASSWORD_MIN_32_CHARS
REDIS_MAXMEMORY=1gb

# -----------------------------------------------------------------------------
# Application Version
# -----------------------------------------------------------------------------
# Should match the git tag or release version
APP_VERSION=1.0.0

# -----------------------------------------------------------------------------
# Image Configuration (Production)
# -----------------------------------------------------------------------------
# Use pre-built, security-scanned images from container registry
BACKEND_IMAGE=ghcr.io/edenconz/backend:latest
FRONTEND_IMAGE=ghcr.io/edenconz/frontend:latest

# -----------------------------------------------------------------------------
# Worker Configuration (Production)
# -----------------------------------------------------------------------------
# High concurrency for production
CELERY_WORKER_CONCURRENCY=8
GUNICORN_WORKERS=8
GUNICORN_TIMEOUT=30
GUNICORN_MAX_REQUESTS=1000
GUNICORN_MAX_REQUESTS_JITTER=100

# -----------------------------------------------------------------------------
# Domain Configuration (Production)
# -----------------------------------------------------------------------------
# Production domain(s) - MUST be configured correctly
PRODUCTION_DOMAIN=yourdomain.com
PRODUCTION_API_DOMAIN=yourdomain.com
PRODUCTION_WWW_DOMAIN=www.yourdomain.com

# -----------------------------------------------------------------------------
# SSL/TLS Configuration (Production)
# -----------------------------------------------------------------------------
# Path to SSL certificates (use Let's Encrypt in production)
SSL_CERT_PATH=/etc/nginx/ssl/production.crt
SSL_KEY_PATH=/etc/nginx/ssl/production.key

# HSTS settings (enforce HTTPS)
SECURE_HSTS_SECONDS=31536000
SECURE_HSTS_INCLUDE_SUBDOMAINS=true
SECURE_HSTS_PRELOAD=true

# -----------------------------------------------------------------------------
# External Services (Production)
# -----------------------------------------------------------------------------
# Email service (REQUIRED for production)
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_HOST_USER=production-email@yourdomain.com
EMAIL_HOST_PASSWORD=CHANGE_ME_TO_SECURE_EMAIL_APP_PASSWORD
DEFAULT_FROM_EMAIL=noreply@yourdomain.com

# Sentry error tracking (HIGHLY RECOMMENDED)
SENTRY_DSN=CHANGE_ME_TO_YOUR_SENTRY_DSN
SENTRY_ENVIRONMENT=production
SENTRY_TRACES_SAMPLE_RATE=0.1

# AWS S3 storage (RECOMMENDED for media/static files)
AWS_ACCESS_KEY_ID=CHANGE_ME_TO_AWS_ACCESS_KEY
AWS_SECRET_ACCESS_KEY=CHANGE_ME_TO_AWS_SECRET_KEY
AWS_STORAGE_BUCKET_NAME=your-production-bucket
AWS_S3_REGION_NAME=us-east-1
USE_S3=true

# CloudFront CDN (optional)
# AWS_CLOUDFRONT_DOMAIN=your-cloudfront-domain.cloudfront.net

# -----------------------------------------------------------------------------
# Security Configuration (Production)
# -----------------------------------------------------------------------------
# Rate limiting (MUST be enabled)
RATELIMIT_ENABLE=true

# JWT token lifetimes (minutes)
JWT_ACCESS_TOKEN_LIFETIME=15
JWT_REFRESH_TOKEN_LIFETIME=10080

# Password requirements (strict)
PASSWORD_MIN_LENGTH=12

# Session security
SESSION_COOKIE_AGE=1209600
SESSION_COOKIE_HTTPONLY=true
SESSION_COOKIE_SAMESITE=Strict

# -----------------------------------------------------------------------------
# Backup Configuration (Production)
# -----------------------------------------------------------------------------
# Database backup settings (CRITICAL for production)
BACKUP_ENABLED=true
BACKUP_SCHEDULE="0 2 * * *"
BACKUP_RETENTION_DAYS=30
BACKUP_S3_BUCKET=your-backup-bucket
BACKUP_ENCRYPTION_KEY=CHANGE_ME_TO_BACKUP_ENCRYPTION_KEY

# -----------------------------------------------------------------------------
# Monitoring & Alerting (Production)
# -----------------------------------------------------------------------------
# Monitoring service (optional)
# DATADOG_API_KEY=your-datadog-api-key
# PROMETHEUS_ENABLED=true
# GRAFANA_ENABLED=true

# -----------------------------------------------------------------------------
# Feature Flags (Production)
# -----------------------------------------------------------------------------
# Production should have ALL debug features disabled
ENABLE_DEBUG_TOOLBAR=false
ENABLE_SILK_PROFILING=false
ENABLE_HOT_RELOAD=false

# Analytics and tracking
ENABLE_ANALYTICS=true
ENABLE_ERROR_REPORTING=true

# -----------------------------------------------------------------------------
# Scaling Configuration (Production)
# -----------------------------------------------------------------------------
# Auto-scaling settings (if using orchestration platform)
MIN_REPLICAS=2
MAX_REPLICAS=10
TARGET_CPU_UTILIZATION=70

# -----------------------------------------------------------------------------
# Compliance & Auditing (Production)
# -----------------------------------------------------------------------------
# Enable audit logging
ENABLE_AUDIT_LOGGING=true
AUDIT_LOG_RETENTION_DAYS=365

# GDPR compliance
ENABLE_GDPR_FEATURES=true
DATA_RETENTION_DAYS=730

# -----------------------------------------------------------------------------
# Notes
# -----------------------------------------------------------------------------
# CRITICAL PRODUCTION CHECKLIST:
#
# 1. Security:
#    - Replace ALL "CHANGE_ME" values with STRONG, UNIQUE credentials
#    - Use passwords with minimum 32 characters (48+ recommended)
#    - Generate passwords: openssl rand -base64 48
#    - NEVER reuse passwords between environments
#    - Store this file in a secure secrets manager (NOT in Git)
#
# 2. SSL/TLS:
#    - Configure valid SSL certificates (Let's Encrypt recommended)
#    - Enable HSTS with preload
#    - Test SSL configuration: https://www.ssllabs.com/ssltest/
#
# 3. Domains:
#    - Configure PRODUCTION_DOMAIN with your actual domain
#    - Set up DNS records correctly (A/AAAA records)
#    - Configure CORS_ALLOWED_ORIGINS in backend/.env.production
#
# 4. External Services:
#    - Enable Sentry for error tracking (HIGHLY RECOMMENDED)
#    - Configure AWS S3 for media storage (RECOMMENDED)
#    - Set up email service for notifications (REQUIRED)
#    - Configure CDN for static assets (RECOMMENDED)
#
# 5. Backups:
#    - Enable automated database backups (CRITICAL)
#    - Test backup restoration regularly
#    - Store backups in separate region/account
#
# 6. Monitoring:
#    - Set up application performance monitoring
#    - Configure alerting for critical errors
#    - Monitor resource usage and costs
#
# 7. Testing:
#    - Run Django deployment checks: python manage.py check --deploy
#    - Test in staging environment first
#    - Perform security scanning before deployment
#    - Load test the application
#
# 8. Compliance:
#    - Review data retention policies
#    - Enable audit logging
#    - Document data processing activities (GDPR)
#
# 9. Documentation:
#    - Document deployment procedures
#    - Create runbooks for common issues
#    - Maintain incident response plan
#
# 10. Access Control:
#     - Limit access to production environment
#     - Use SSH key-based authentication
#     - Enable MFA for all production access
#     - Regular security audits
