# =============================================================================
# Test Environment Configuration (Feature #13 - Story 13.1)
# =============================================================================
# This file contains environment variables specific to the test environment.
# It ensures tests run in an isolated environment with test-specific settings
# that don't affect production or development environments.
#
# Usage:
#   Load this file when running tests:
#   docker compose -f compose.yml -f compose.test.yml --env-file .env.test up
#
#   Or use the test runner script (automatically loads this file):
#   ./testing/run-tests.sh
# =============================================================================

# -----------------------------------------------------------------------------
# Environment Identification
# -----------------------------------------------------------------------------
ENVIRONMENT=test
NODE_ENV=test
VITE_ENVIRONMENT=test

# -----------------------------------------------------------------------------
# Test Database Configuration
# -----------------------------------------------------------------------------
# Isolated PostgreSQL database for testing
# Uses different credentials and database name to prevent conflicts
# -----------------------------------------------------------------------------
TEST_DB_NAME=backend_test_db
TEST_DB_USER=postgres_test
TEST_DB_PASSWORD=postgres_test_secure_password_change_in_ci
TEST_DB_HOST=db
TEST_DB_PORT=5432

# For Django database configuration
DB_NAME=backend_test_db
DB_USER=postgres_test
DB_PASSWORD=postgres_test_secure_password_change_in_ci
DB_HOST=db
DB_PORT=5432
DB_ENGINE=django.db.backends.postgresql

# -----------------------------------------------------------------------------
# Test Redis Configuration
# -----------------------------------------------------------------------------
# Isolated Redis cache for testing
# -----------------------------------------------------------------------------
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_DB=0
REDIS_PASSWORD=
CACHE_TTL=300

# -----------------------------------------------------------------------------
# Django Test Configuration
# -----------------------------------------------------------------------------
# Django-specific settings for test environment
# -----------------------------------------------------------------------------
DJANGO_SETTINGS_MODULE=backend.settings.test
SECRET_KEY=test-secret-key-not-for-production-use-only-for-testing
DEBUG=True
ALLOWED_HOSTS=localhost,127.0.0.1,backend,app-backend-test,testserver

# CORS settings for test environment
CORS_ALLOWED_ORIGINS=http://localhost,http://localhost:80,http://localhost:5173,http://localhost:5174,http://frontend:5173
CSRF_TRUSTED_ORIGINS=http://localhost,http://localhost:80,http://localhost:5173,http://localhost:5174

# -----------------------------------------------------------------------------
# Frontend Test Configuration (Runtime Config)
# -----------------------------------------------------------------------------
# Backend provides these values to frontend via /api/v1/config/frontend/
# -----------------------------------------------------------------------------
FRONTEND_API_URL=http://localhost/api
FRONTEND_APP_NAME=Test Application
FRONTEND_APP_TITLE=Test Application
FRONTEND_APP_VERSION=test
FRONTEND_ENVIRONMENT=test
FRONTEND_API_TIMEOUT=30000
FRONTEND_ENABLE_LOGGING=true
FRONTEND_LOG_LEVEL=debug

# -----------------------------------------------------------------------------
# Test Execution Configuration
# -----------------------------------------------------------------------------
# Settings that control test behavior
# -----------------------------------------------------------------------------
# Pytest settings
PYTEST_ARGS=--verbose --tb=short --maxfail=5
PYTEST_MARKERS=not slow

# E2E test settings (Playwright)
PLAYWRIGHT_HEADLESS=true
PLAYWRIGHT_SLOWMO=0
PLAYWRIGHT_TIMEOUT=30000
PLAYWRIGHT_BASE_URL=http://proxy:80

# Visual regression test settings
VISUAL_REGRESSION_THRESHOLD=0.1
VISUAL_UPDATE_BASELINE=false

# Performance test settings
PERFORMANCE_DURATION=60
PERFORMANCE_USERS=10
PERFORMANCE_SPAWN_RATE=2

# -----------------------------------------------------------------------------
# Test Artifact Configuration
# -----------------------------------------------------------------------------
# Directories for test outputs and reports
# -----------------------------------------------------------------------------
TEST_REPORTS_DIR=/testing/reports
TEST_SCREENSHOTS_DIR=/testing/reports/screenshots
TEST_VIDEOS_DIR=/testing/reports/videos
TEST_LOGS_DIR=/testing/reports/logs
TEST_COVERAGE_DIR=/testing/reports/coverage

# Report formats
TEST_REPORT_FORMAT=html,json
TEST_COVERAGE_FORMAT=html,xml,json

# -----------------------------------------------------------------------------
# Logging Configuration
# -----------------------------------------------------------------------------
# Detailed logging for test troubleshooting
# -----------------------------------------------------------------------------
LOG_LEVEL=DEBUG
DJANGO_LOG_LEVEL=DEBUG
SQL_LOG_LEVEL=INFO
CELERY_LOG_LEVEL=INFO

# Log files
LOG_FILE=/testing/reports/logs/application.log
SQL_LOG_FILE=/testing/reports/logs/sql.log
ERROR_LOG_FILE=/testing/reports/logs/errors.log

# -----------------------------------------------------------------------------
# Test Data Configuration
# -----------------------------------------------------------------------------
# Settings for test data generation and fixtures
# -----------------------------------------------------------------------------
# Use fixtures from testing/fixtures/
FIXTURES_DIR=/testing/fixtures
LOAD_FIXTURES=true

# Test data generation
GENERATE_TEST_DATA=true
TEST_USERS_COUNT=10
TEST_ASSESSMENTS_COUNT=50

# -----------------------------------------------------------------------------
# Email Configuration (Test)
# -----------------------------------------------------------------------------
# Use console backend for email testing
# -----------------------------------------------------------------------------
EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
DEFAULT_FROM_EMAIL=test@example.com

# -----------------------------------------------------------------------------
# Celery Configuration (Test)
# -----------------------------------------------------------------------------
# Synchronous task execution for testing
# -----------------------------------------------------------------------------
CELERY_TASK_ALWAYS_EAGER=true
CELERY_TASK_EAGER_PROPAGATES=true
CELERY_BROKER_URL=redis://redis:6379/1
CELERY_RESULT_BACKEND=redis://redis:6379/2

# -----------------------------------------------------------------------------
# Security Settings (Test)
# -----------------------------------------------------------------------------
# Relaxed security for test environment
# -----------------------------------------------------------------------------
SECURE_SSL_REDIRECT=false
SESSION_COOKIE_SECURE=false
CSRF_COOKIE_SECURE=false
SECURE_HSTS_SECONDS=0

# -----------------------------------------------------------------------------
# Feature Flags (Test)
# -----------------------------------------------------------------------------
# Enable/disable features for specific tests
# -----------------------------------------------------------------------------
ENABLE_RATE_LIMITING=false
ENABLE_ANALYTICS=false
ENABLE_FEATURE_X=true

# -----------------------------------------------------------------------------
# Test Isolation Settings
# -----------------------------------------------------------------------------
# Ensure tests don't affect other environments
# -----------------------------------------------------------------------------
# Use separate container names
COMPOSE_PROJECT_NAME=app-test

# Network isolation
NETWORK_NAME=app-test-network

# Volume names
DB_VOLUME_NAME=app-postgres-test-data
REDIS_VOLUME_NAME=app-redis-test-data
