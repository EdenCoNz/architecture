name: Test GitHub Actions Permissions

# This workflow tests that GitHub Actions can successfully fetch job logs
# with the correct permissions configuration.
#
# Purpose: Validate Bug #2 fix - ensure log-bugs job has necessary permissions
# Reference: docs/features/bugs/2/investigation-report.md

on:
  workflow_dispatch:  # Manual trigger only - for testing purposes
    inputs:
      test-scenario:
        description: 'Test scenario to run'
        required: true
        type: choice
        options:
          - 'test-with-actions-read'
          - 'test-without-actions-read'
        default: 'test-with-actions-read'

# Workflow-level permissions (for comparison with job-level)
permissions:
  contents: read
  actions: read

jobs:
  # ========================================================================
  # Job 1: Intentional Failure (triggers test-permissions job)
  # ========================================================================
  trigger-failure:
    name: Trigger Failure for Permission Test
    runs-on: ubuntu-22.04
    timeout-minutes: 2

    steps:
      - name: Simulate failure
        run: |
          echo "This job intentionally fails to trigger permission testing"
          echo "Test scenario: ${{ github.event.inputs.test-scenario }}"
          exit 1

  # ========================================================================
  # Job 2: Test Permissions WITH actions:read (SHOULD SUCCEED)
  # ========================================================================
  test-with-actions-read:
    name: Test WITH actions:read Permission
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    needs: [trigger-failure]
    if: |
      always() &&
      needs.trigger-failure.result == 'failure' &&
      github.event.inputs.test-scenario == 'test-with-actions-read'

    # CORRECT CONFIGURATION: Both required permissions
    permissions:
      contents: read
      actions: read  # This permission is REQUIRED for API access

    steps:
      - name: Test API access to jobs endpoint
        id: test-jobs-api
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "Testing /repos/{owner}/{repo}/actions/runs/{run_id}/jobs endpoint..."

          RUN_ID="${{ github.run_id }}"
          REPO="${{ github.repository }}"

          # Attempt API call with response validation
          RESPONSE=$(mktemp)
          HTTP_CODE=$(curl -s -w "%{http_code}" \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/$REPO/actions/runs/$RUN_ID/jobs" \
            -o "$RESPONSE")

          echo "HTTP Status Code: $HTTP_CODE"

          # Validate response
          if [ "$HTTP_CODE" != "200" ]; then
            echo "❌ FAILED: API returned HTTP $HTTP_CODE"
            echo "Response body:"
            cat "$RESPONSE"
            rm -f "$RESPONSE"
            exit 1
          fi

          # Validate JSON structure
          if ! jq -e '.jobs' "$RESPONSE" > /dev/null 2>&1; then
            echo "❌ FAILED: Response is not valid JSON or missing 'jobs' array"
            echo "Response body:"
            cat "$RESPONSE"
            rm -f "$RESPONSE"
            exit 1
          fi

          # Count jobs
          JOB_COUNT=$(jq '.jobs | length' "$RESPONSE")
          echo "✅ SUCCESS: Found $JOB_COUNT jobs in workflow run"

          # Verify the trigger-failure job is present
          FAILED_JOB_NAME=$(jq -r '.jobs[] | select(.name == "Trigger Failure for Permission Test") | .name' "$RESPONSE")
          if [ -z "$FAILED_JOB_NAME" ]; then
            echo "❌ FAILED: Could not find 'Trigger Failure for Permission Test' job in response"
            rm -f "$RESPONSE"
            exit 1
          fi

          echo "✅ SUCCESS: Found failed job: $FAILED_JOB_NAME"

          # Extract job ID for log testing
          JOB_ID=$(jq -r '.jobs[] | select(.name == "Trigger Failure for Permission Test") | .id' "$RESPONSE")
          echo "job_id=$JOB_ID" >> $GITHUB_OUTPUT
          echo "Job ID: $JOB_ID"

          rm -f "$RESPONSE"

      - name: Test API access to job logs endpoint
        id: test-logs-api
        env:
          GH_TOKEN: ${{ github.token }}
          JOB_ID: ${{ steps.test-jobs-api.outputs.job_id }}
        run: |
          echo "Testing /repos/{owner}/{repo}/actions/jobs/{job_id}/logs endpoint..."

          REPO="${{ github.repository }}"

          # Attempt to download logs
          LOGS_FILE=$(mktemp)
          HTTP_CODE=$(curl -s -w "%{http_code}" \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/$REPO/actions/jobs/$JOB_ID/logs" \
            -o "$LOGS_FILE")

          echo "HTTP Status Code: $HTTP_CODE"

          # Accept 200 (success) or 302 (redirect to download URL)
          if [ "$HTTP_CODE" != "200" ] && [ "$HTTP_CODE" != "302" ]; then
            echo "❌ FAILED: API returned HTTP $HTTP_CODE"
            echo "Response:"
            head -n 20 "$LOGS_FILE"
            rm -f "$LOGS_FILE"
            exit 1
          fi

          # Validate logs are not an error message
          if head -n 1 "$LOGS_FILE" | grep -q "^{"; then
            echo "❌ FAILED: Received JSON error response instead of logs"
            cat "$LOGS_FILE"
            rm -f "$LOGS_FILE"
            exit 1
          fi

          # Validate logs contain actual content
          LOG_SIZE=$(wc -c < "$LOGS_FILE")
          if [ "$LOG_SIZE" -lt 10 ]; then
            echo "❌ FAILED: Logs are too small (${LOG_SIZE} bytes), likely empty or error"
            cat "$LOGS_FILE"
            rm -f "$LOGS_FILE"
            exit 1
          fi

          echo "✅ SUCCESS: Retrieved job logs (${LOG_SIZE} bytes)"
          echo "Log preview (first 10 lines):"
          head -n 10 "$LOGS_FILE"

          rm -f "$LOGS_FILE"

      - name: Test summary
        if: success()
        run: |
          echo "## ✅ Permission Test PASSED" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ GitHub CLI can access /repos/{owner}/{repo}/actions/runs/{run_id}/jobs endpoint" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ API response contains valid JSON with jobs array" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Job log retrieval returns actual log content (not error messages)" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Permissions are sufficient for bug logging workflow" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Configuration Tested" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`yaml" >> $GITHUB_STEP_SUMMARY
          echo "permissions:" >> $GITHUB_STEP_SUMMARY
          echo "  contents: read" >> $GITHUB_STEP_SUMMARY
          echo "  actions: read  # REQUIRED for API access" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY

      - name: Test failure summary
        if: failure()
        run: |
          echo "## ❌ Permission Test FAILED" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "One or more API calls failed. Check the step logs above for details." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Possible Causes" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- Missing \`actions: read\` permission at job level" >> $GITHUB_STEP_SUMMARY
          echo "- GitHub API rate limiting" >> $GITHUB_STEP_SUMMARY
          echo "- Network connectivity issues" >> $GITHUB_STEP_SUMMARY
          echo "- Workflow run or job not yet available via API" >> $GITHUB_STEP_SUMMARY

  # ========================================================================
  # Job 3: Test Permissions WITHOUT actions:read (SHOULD FAIL)
  # ========================================================================
  test-without-actions-read:
    name: Test WITHOUT actions:read Permission
    runs-on: ubuntu-22.04
    timeout-minutes: 5
    needs: [trigger-failure]
    if: |
      always() &&
      needs.trigger-failure.result == 'failure' &&
      github.event.inputs.test-scenario == 'test-without-actions-read'

    # INCORRECT CONFIGURATION: Missing actions:read permission
    permissions:
      contents: read
      # actions: read is MISSING - this should cause API calls to fail

    steps:
      - name: Test API access WITHOUT actions:read permission
        id: test-no-permission
        continue-on-error: true  # Expect this to fail
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          echo "Testing API access WITHOUT actions:read permission..."
          echo "This test should FAIL with permission denied error"

          RUN_ID="${{ github.run_id }}"
          REPO="${{ github.repository }}"

          # Attempt API call - expect failure
          RESPONSE=$(mktemp)
          HTTP_CODE=$(curl -s -w "%{http_code}" \
            -H "Authorization: Bearer $GH_TOKEN" \
            -H "Accept: application/vnd.github+json" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            "https://api.github.com/repos/$REPO/actions/runs/$RUN_ID/jobs" \
            -o "$RESPONSE")

          echo "HTTP Status Code: $HTTP_CODE"

          if [ "$HTTP_CODE" = "200" ]; then
            echo "❌ UNEXPECTED: API call succeeded without actions:read permission"
            echo "This indicates a problem with the test setup"
            rm -f "$RESPONSE"
            exit 1
          fi

          echo "✅ EXPECTED: API call failed with HTTP $HTTP_CODE"
          echo "Response:"
          cat "$RESPONSE"
          rm -f "$RESPONSE"
          exit 0

      - name: Validate error message
        if: steps.test-no-permission.outcome == 'success'
        run: |
          echo "## ✅ Negative Test PASSED" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ API call correctly failed without \`actions: read\` permission" >> $GITHUB_STEP_SUMMARY
          echo "- ✅ Error message indicates insufficient permissions" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Configuration Tested" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`yaml" >> $GITHUB_STEP_SUMMARY
          echo "permissions:" >> $GITHUB_STEP_SUMMARY
          echo "  contents: read" >> $GITHUB_STEP_SUMMARY
          echo "  # actions: read is MISSING" >> $GITHUB_STEP_SUMMARY
          echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Conclusion" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "This test confirms that \`actions: read\` permission is REQUIRED" >> $GITHUB_STEP_SUMMARY
          echo "for the log-bugs job to function correctly." >> $GITHUB_STEP_SUMMARY

      - name: Test setup failure
        if: steps.test-no-permission.outcome == 'failure'
        run: |
          echo "## ❌ Negative Test FAILED" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The API call succeeded when it should have failed." >> $GITHUB_STEP_SUMMARY
          echo "This indicates an issue with the test configuration." >> $GITHUB_STEP_SUMMARY
          exit 1
