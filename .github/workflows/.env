# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
# GitHub Actions Secrets Configuration
# ━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━
#
# ⚠️  This file documents required secrets - it does NOT contain actual values.
# Configure actual secrets at: Repository Settings → Secrets and variables → Actions
#

# ============================================================================
# Required Secrets
# ============================================================================

# TARGET_REPO_PAT
# ---------------
# Purpose: Authenticate and push to EdenCoNz/proform repository
# Used by: .github/workflows/sync-to-proform.yml
#
# How to create:
#   1. GitHub Settings → Developer settings → Personal access tokens → Fine-grained tokens
#   2. Generate new token with:
#      - Repository access: Only EdenCoNz/proform
#      - Permissions: Contents (Read and write)
#   3. Add to repository: Settings → Secrets and variables → Actions → New repository secret
#      - Name: TARGET_REPO_PAT
#      - Value: <paste token>
#
# Recommended: Set 90-day expiration and create calendar reminder to rotate

# ============================================================================
# Frontend CI/CD (frontend-ci.yml)
# ============================================================================

# GITHUB_TOKEN Permissions
# ------------------------
# The workflow uses the built-in GITHUB_TOKEN with the following permissions:
#
# - contents: read (checkout code, read repository)
# - pull-requests: write (post coverage reports to PRs)
# - checks: write (create check runs)

# - issues: write (auto-close issues on successful build via reusable workflow)
#
# Auto-Close Issue Feature (Reusable Workflow):
# The frontend-ci.yml workflow calls the reusable auto-close-issue.yml workflow
# when all jobs succeed on the main branch. The reusable workflow:
# - Parses commit messages for "Fix issue #N" or "Fix issue N" (case-insensitive)
# - Automatically closes the referenced issue with a comment linking to the commit
# - Can be reused by other workflows that need auto-close functionality
#
# See: .github/workflows/auto-close-issue.yml for implementation details

# Current Status: No additional secrets required
#
# The frontend CI/CD workflow runs using GITHUB_TOKEN for:
# - ESLint linting checks
# - Prettier formatting checks
# - TypeScript type checking
# - Production builds
# - Build artifact generation and upload
# - Security audit (npm audit)

# - Auto-closing issues on successful workflow runs (main branch only, via reusable workflow)
#
# Future Secrets (when implementing deployment):
# - Cloud provider credentials (AWS_ACCESS_KEY_ID, AWS_SECRET_ACCESS_KEY, etc.)
# - Deployment API tokens (NETLIFY_AUTH_TOKEN, VERCEL_TOKEN, etc.)
# - Environment-specific configuration secrets

# ============================================================================
# Auto-Close Issue (auto-close-issue.yml) - Reusable Workflow
# ============================================================================

# GITHUB_TOKEN Permissions
# ------------------------
# This reusable workflow requires the following permissions from calling workflows:
#
# - issues: write (close issues and add comments)
# - contents: read (access repository metadata)
#
# Inputs Required:
# ----------------
# - commit-message: The commit message to parse for issue references
# - repository: Repository in owner/name format
# - sha: Commit SHA that fixed the issue
# - workflow-name: (optional) Name of calling workflow for issue comment
#
# Usage Pattern:
# The workflow searches commit messages for the pattern "Fix issue #N" or "Fix issue N"
# (case-insensitive) and automatically closes the referenced issue if it exists and is open.
#
# Example Usage:
#   jobs:
#     auto-close:
#       uses: ./.github/workflows/auto-close-issue.yml
#       with:
#         commit-message: ${{ github.event.head_commit.message }}
#         repository: ${{ github.repository }}
#         sha: ${{ github.sha }}
#         workflow-name: 'My Workflow Name'
#       permissions:
#         issues: write
#         contents: read
#
# Current Users:
# - frontend-ci.yml (runs on main branch after all jobs succeed)
