name: CI Failure Fix Trigger

# This workflow is triggered by repository_dispatch events from the issue-event-listener workflow
# It receives CI failure issue metadata and creates a comment indicating automated fix is needed
# Part of Feature #7: Automated CI/CD Failure Resolution Flow (Story #7)

on:
  repository_dispatch:
    types:
      - ci-failure-fix-trigger

# Minimal permissions (principle of least privilege)
permissions:
  contents: read
  issues: write

jobs:
  trigger-fix-attempt:
    name: Trigger Automated Fix Attempt
    runs-on: ubuntu-22.04
    timeout-minutes: 5

    steps:
      - name: Log trigger event
        run: |
          echo "=========================================="
          echo "CI Failure Fix Trigger Activated"
          echo "=========================================="
          echo "Event Type: ${{ github.event.action }}"
          echo "Issue Number: ${{ github.event.client_payload.issue_number }}"
          echo "Issue Title: ${{ github.event.client_payload.issue_title }}"
          echo "Issue URL: ${{ github.event.client_payload.issue_url }}"
          echo ""
          echo "Context:"
          echo "  Feature ID: ${{ github.event.client_payload.feature_id }}"
          echo "  Feature Name: ${{ github.event.client_payload.feature_name }}"
          echo "  Branch Name: ${{ github.event.client_payload.branch_name }}"
          echo "  Job Name: ${{ github.event.client_payload.job_name }}"
          echo "  Step Name: ${{ github.event.client_payload.step_name }}"
          echo "=========================================="

      - name: Validate payload
        id: validate
        run: |
          echo "Validating event payload..."

          ISSUE_NUMBER="${{ github.event.client_payload.issue_number }}"
          FEATURE_ID="${{ github.event.client_payload.feature_id }}"
          BRANCH_NAME="${{ github.event.client_payload.branch_name }}"

          IS_VALID=true

          if [ -z "$ISSUE_NUMBER" ]; then
            echo "ERROR: Issue number is missing from payload"
            IS_VALID=false
          fi

          if [ -z "$FEATURE_ID" ]; then
            echo "ERROR: Feature ID is missing from payload"
            IS_VALID=false
          fi

          if [ -z "$BRANCH_NAME" ]; then
            echo "ERROR: Branch name is missing from payload"
            IS_VALID=false
          fi

          if [ "$IS_VALID" = "true" ]; then
            echo "✅ Payload validation passed"
            echo "is_valid=true" >> $GITHUB_OUTPUT
          else
            echo "❌ Payload validation failed"
            echo "is_valid=false" >> $GITHUB_OUTPUT
            exit 1
          fi

      - name: Add fix trigger comment to issue
        if: steps.validate.outputs.is_valid == 'true'
        run: |
          ISSUE_NUMBER="${{ github.event.client_payload.issue_number }}"

          echo "Adding automated fix trigger comment to issue #$ISSUE_NUMBER..."

          # Create comment body with fix context
          COMMENT_BODY=$(cat <<'EOF'
          ## 🤖 Automated Fix Trigger

          This CI/CD failure has been detected and queued for automated resolution.

          ### Fix Context
          | Field | Value |
          |-------|-------|
          | Feature ID | ${{ github.event.client_payload.feature_id }} |
          | Feature Name | ${{ github.event.client_payload.feature_name }} |
          | Branch | ${{ github.event.client_payload.branch_name }} |
          | Failed Job | ${{ github.event.client_payload.job_name }} |
          | Failed Step | ${{ github.event.client_payload.step_name }} |

          ### Next Steps
          The automated fix workflow will:
          1. Analyze the failure logs and context
          2. Create user stories to address the root cause
          3. Implement the fix using appropriate agents
          4. Create a commit with the fix
          5. Update this issue with the fix status

          **Note**: This is an asynchronous process. The fix attempt will be executed by the Claude CLI `/fix` command in the development environment.

          ### Command to Execute
          For manual execution or development environment automation:
          ```bash
          cd /path/to/repository
          claude /fix gha
          ```

          The `/fix` command will automatically:
          - Fetch this issue (oldest open issue)
          - Parse the failure context
          - Create user stories for the fix
          - Implement the user stories
          - Commit and push the fix
          - Mark this issue as `fixed-pending-merge`

          ---
          *This comment was automatically generated by the CI Failure Fix Trigger workflow*
          *Part of Feature #7: Automated CI/CD Failure Resolution Flow*
          EOF
          )

          # Post comment to issue
          gh issue comment $ISSUE_NUMBER \
            --repo ${{ github.repository }} \
            --body "$COMMENT_BODY"

          echo "✅ Comment added successfully"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Add automation label
        if: steps.validate.outputs.is_valid == 'true'
        run: |
          ISSUE_NUMBER="${{ github.event.client_payload.issue_number }}"

          echo "Adding fix-queued label to issue #$ISSUE_NUMBER..."

          # Add label to indicate fix has been queued
          gh issue edit $ISSUE_NUMBER \
            --repo ${{ github.repository }} \
            --add-label "fix-queued"

          echo "✅ Label added successfully"
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Summary
        if: always()
        run: |
          echo "## Fix Trigger Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY

          # Validation status
          if [ "${{ steps.validate.outputs.is_valid }}" = "true" ]; then
            echo "### ✅ Fix Trigger Successful" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Issue**: [#${{ github.event.client_payload.issue_number }}](${{ github.event.client_payload.issue_url }})" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Actions Taken" >> $GITHUB_STEP_SUMMARY
            echo "- Added automated fix trigger comment to issue" >> $GITHUB_STEP_SUMMARY
            echo "- Added \`fix-queued\` label to issue" >> $GITHUB_STEP_SUMMARY
            echo "- Issue is now ready for \`/fix\` command execution" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Context" >> $GITHUB_STEP_SUMMARY
            echo "| Field | Value |" >> $GITHUB_STEP_SUMMARY
            echo "|-------|-------|" >> $GITHUB_STEP_SUMMARY
            echo "| Feature ID | ${{ github.event.client_payload.feature_id }} |" >> $GITHUB_STEP_SUMMARY
            echo "| Feature Name | ${{ github.event.client_payload.feature_name }} |" >> $GITHUB_STEP_SUMMARY
            echo "| Branch | ${{ github.event.client_payload.branch_name }} |" >> $GITHUB_STEP_SUMMARY
            echo "| Job | ${{ github.event.client_payload.job_name }} |" >> $GITHUB_STEP_SUMMARY
            echo "| Step | ${{ github.event.client_payload.step_name }} |" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "### Manual Execution" >> $GITHUB_STEP_SUMMARY
            echo "To manually execute the fix in a development environment:" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
            echo "cd /path/to/repository" >> $GITHUB_STEP_SUMMARY
            echo "claude /fix gha" >> $GITHUB_STEP_SUMMARY
            echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
          else
            echo "### ❌ Fix Trigger Failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "**Error**: Payload validation failed" >> $GITHUB_STEP_SUMMARY
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "Missing required fields in repository_dispatch payload." >> $GITHUB_STEP_SUMMARY
            echo "Check the issue-event-listener workflow configuration." >> $GITHUB_STEP_SUMMARY
          fi

          echo "" >> $GITHUB_STEP_SUMMARY
          echo "---" >> $GITHUB_STEP_SUMMARY
          echo "*This workflow is part of Feature #7: Automated CI/CD Failure Resolution Flow (Story #7)*" >> $GITHUB_STEP_SUMMARY
