# Generated by Django 5.2.7 on 2025-10-25 03:04

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Assessment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True, primary_key=True, serialize=False, verbose_name="ID"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "sport",
                    models.CharField(
                        choices=[("football", "Football"), ("cricket", "Cricket")],
                        help_text="Primary sport for training focus",
                        max_length=20,
                        verbose_name="sport",
                    ),
                ),
                (
                    "age",
                    models.PositiveSmallIntegerField(
                        help_text="User age (13-100 years)",
                        validators=[
                            django.core.validators.MinValueValidator(
                                13, message="You must be at least 13 years old to use this service"
                            ),
                            django.core.validators.MaxValueValidator(
                                100, message="Please enter a valid age"
                            ),
                        ],
                        verbose_name="age",
                    ),
                ),
                (
                    "experience_level",
                    models.CharField(
                        choices=[
                            ("beginner", "Beginner"),
                            ("intermediate", "Intermediate"),
                            ("advanced", "Advanced"),
                        ],
                        help_text="Current training experience level",
                        max_length=20,
                        verbose_name="experience level",
                    ),
                ),
                (
                    "training_days",
                    models.CharField(
                        choices=[
                            ("2-3", "2-3 days per week"),
                            ("4-5", "4-5 days per week"),
                            ("6-7", "6-7 days per week"),
                        ],
                        help_text="Days per week available for training",
                        max_length=10,
                        verbose_name="training days",
                    ),
                ),
                (
                    "injuries",
                    models.CharField(
                        choices=[("no", "No injuries"), ("yes", "I have injury history")],
                        default="no",
                        help_text="Current or recent injury status",
                        max_length=10,
                        verbose_name="injuries",
                    ),
                ),
                (
                    "equipment",
                    models.CharField(
                        choices=[
                            ("no_equipment", "No Equipment"),
                            ("basic_equipment", "Basic Equipment"),
                            ("full_gym", "Full Gym"),
                        ],
                        help_text="Available training equipment",
                        max_length=20,
                        verbose_name="equipment",
                    ),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assessment",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="user",
                    ),
                ),
            ],
            options={
                "verbose_name": "assessment",
                "verbose_name_plural": "assessments",
                "db_table": "assessments",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["user"], name="assessments_user_id_93c929_idx"),
                    models.Index(fields=["sport"], name="assessments_sport_eff9d2_idx"),
                    models.Index(fields=["created_at"], name="assessments_created_8a51b9_idx"),
                ],
            },
        ),
    ]
