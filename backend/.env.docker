# =============================================================================
# Docker Environment Configuration
# =============================================================================
# This file contains Docker-specific environment variables for the backend
# application running in containers. It should be used with docker-compose.yml
#
# IMPORTANT:
# - This file is for Docker development environment only
# - For local development without Docker, use .env
# - For production, use environment variables injection or secrets management
# - Never commit real secrets to version control
# =============================================================================

# -----------------------------------------------------------------------------
# Django Core Settings
# -----------------------------------------------------------------------------

# SECRET_KEY (Development only - generate secure key for production)
# Generate using: python -c "import secrets; print(secrets.token_urlsafe(50))"
SECRET_KEY=django-insecure-docker-development-key-replace-in-production-with-secure-key

# DJANGO_SETTINGS_MODULE
DJANGO_SETTINGS_MODULE=config.settings.development

# DEBUG (automatically set in docker-compose.yml)
DEBUG=True

# ALLOWED_HOSTS (comma-separated)
ALLOWED_HOSTS=localhost,127.0.0.1,backend,0.0.0.0

# -----------------------------------------------------------------------------
# Database Configuration
# -----------------------------------------------------------------------------
# Note: DB_HOST, DB_PORT are overridden in docker-compose.yml to use service names
# These values are defaults if docker-compose doesn't override them

DB_NAME=backend_db
DB_USER=postgres
DB_PASSWORD=postgres
DB_HOST=db
DB_PORT=5432

# -----------------------------------------------------------------------------
# Redis Configuration
# -----------------------------------------------------------------------------
# Note: Redis URLs are overridden in docker-compose.yml to use service names

REDIS_URL=redis://redis:6379/1

# -----------------------------------------------------------------------------
# Celery Configuration
# -----------------------------------------------------------------------------

CELERY_BROKER_URL=redis://redis:6379/0
CELERY_RESULT_BACKEND=redis://redis:6379/0

# -----------------------------------------------------------------------------
# CORS Configuration
# -----------------------------------------------------------------------------

# With reverse proxy, requests come from same origin (http://localhost)
# No CORS issues when frontend and backend accessed through proxy
CORS_ALLOWED_ORIGINS=http://localhost,http://127.0.0.1,http://localhost:5173,http://127.0.0.1:5173

# CSRF trusted origins
CSRF_TRUSTED_ORIGINS=http://localhost,http://127.0.0.1,http://localhost:8000,http://127.0.0.1:8000

# -----------------------------------------------------------------------------
# Frontend Runtime Configuration (Feature #12)
# -----------------------------------------------------------------------------
# These variables control the frontend configuration served at /api/v1/config/frontend/
# When using the reverse proxy, the frontend is at same origin as backend

FRONTEND_API_URL=http://localhost
FRONTEND_API_TIMEOUT=30000
FRONTEND_API_ENABLE_LOGGING=true
FRONTEND_APP_NAME=Application (Docker Dev)
FRONTEND_APP_TITLE=Application
FRONTEND_APP_VERSION=1.0.0-dev
FRONTEND_ENABLE_ANALYTICS=false
FRONTEND_ENABLE_DEBUG=true

# -----------------------------------------------------------------------------
# Email Configuration (Development)
# -----------------------------------------------------------------------------

EMAIL_BACKEND=django.core.mail.backends.console.EmailBackend
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_HOST_USER=
EMAIL_HOST_PASSWORD=
DEFAULT_FROM_EMAIL=noreply@example.com

# -----------------------------------------------------------------------------
# JWT Configuration
# -----------------------------------------------------------------------------

JWT_ACCESS_TOKEN_LIFETIME_MINUTES=15
JWT_REFRESH_TOKEN_LIFETIME_DAYS=7

# -----------------------------------------------------------------------------
# Security Settings (Development)
# -----------------------------------------------------------------------------

SECURE_SSL_REDIRECT=False
SESSION_COOKIE_SECURE=False
CSRF_COOKIE_SECURE=False
RATELIMIT_ENABLE=True

# -----------------------------------------------------------------------------
# Logging Configuration
# -----------------------------------------------------------------------------

LOG_LEVEL=INFO
SLOW_REQUEST_THRESHOLD_MS=1000

# -----------------------------------------------------------------------------
# Development Server Settings
# -----------------------------------------------------------------------------

DEV_HOST=0.0.0.0
DEV_PORT=8000

# -----------------------------------------------------------------------------
# Docker-Specific Settings
# -----------------------------------------------------------------------------

# Python unbuffered output (important for Docker logs)
PYTHONUNBUFFERED=1

# Prevent Python from writing .pyc files
PYTHONDONTWRITEBYTECODE=1
